services:
  db:
    image: ankane/pgvector:latest
    container_name: unishop-db
    environment:
      POSTGRES_DB: unishop_db
      POSTGRES_USER: unishop_user
      POSTGRES_PASSWORD: unishop_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/training-schema.sql:/docker-entrypoint-initdb.d/02-training-schema.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U unishop_user -d unishop_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: unishop-backend
    ports:
      - "8082:8080"
    environment:
    - NODE_ENV=production
    - PORT=8080
    - DB_HOST=db
    - DB_PORT=5432
    - DB_USERNAME=unishop_user
    - DB_PASSWORD=unishop_password
    - DB_NAME=unishop_db
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      # Use the included node healthcheck script instead of curl (curl not present on minimal images)
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: unishop-frontend
    ports:
      - "5174:5174"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:8082
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5174"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data: